import React, { Component } from "react";
// import redux dependencies
import { connect } from "react-redux";
import { bindActionCreators } from "redux";
import onClickOutside from "react-onclickoutside";
import * as baseActions from "store/modules/base";
import * as authActions from "store/modules/auth";
import { LoginModal } from "components";

class LoginModalContainer extends Component {
  handleClose = () => {
    const { visible, BaseActions, AuthActions } = this.props;
    if (!visible) return;
    BaseActions.setScreenMaskVisibility(false);
    AuthActions.toggleLoginModal();
  };
  // generated by onClickOutside HOC
  handleClickOutside = e => {
    this.handleClose();
  };
  handleChangeInput = e => {
    const { AuthActions } = this.props;
    const { name, value } = e.target;
    console.log(name + ":" + value);
    AuthActions.changeInput({
      name,
      value
    });
  };

  shouldComponentUpdate(nextProps, nextState) {
    console.log('LoginModalContainer:showComponentUpdate:'+nextProps.visible);
    return true;
  }
  componentDidMount() {
    console.log('LoginModalContainer:didMount');
    return true;
  }
  render() {
    const { handleChangeInput } = this;
    const { visible, email, password } = this.props;
    console.log("LoginModalContainer:"+visible);

    return (
      <LoginModal
        visible={visible}
        email={email}
        password={password}
        onChangeInput={handleChangeInput}
      />
    );
  }
}

export default connect(
  state => ({
    visible: state.auth.getIn(['auth', 'visible']),
    email: state.auth.getIn(['auth', 'visible']),
    passwod: state.auth.getIn(['auth', 'visible']),
  }),
  dispatch => ({
    BaseActions: bindActionCreators(baseActions, dispatch),
    AuthActions: bindActionCreators(authActions, dispatch)
  })
)(onClickOutside(LoginModalContainer));
