import React, { Component } from "react";
// import redux dependencies
import { connect } from "react-redux";
import { bindActionCreators } from "redux";
import onClickOutside from "react-onclickoutside";
import validate from "validate.js";
import * as baseActions from "store/modules/base";
import * as authActions from "store/modules/auth";
import { LoginModal } from "components";

class LoginModalContainer extends Component {
  handleClose = () => {
    const { visible, BaseActions, AuthActions } = this.props;
    if (!visible) return;
    BaseActions.setScreenMaskVisibility(false);
    AuthActions.toggleLoginModal();
  };
  // generated by onClickOutside HOC
  handleClickOutside = e => {
    this.handleClose();
  };
  handleChangeInput = e => {
    const { AuthActions } = this.props;
    const { name, value } = e.target;
    console.log(name + ":" + value);
    AuthActions.changeInput({
      name,
      value
    });
  };
  handleRegister = () => {
    
    // validate email and password

    const constraints = {
      email: {
        email: {
          message: () => "^잘못된 형식의 이메일입니다."
        }
      },
      password: {
        length: {
          minimum: 6,
          tooShort: "^비밀번호는 %{count}자 이상 입력하세요."
        }
      }
    };

    const form = this.props.form.toJS();
    console.log('registering... ='+form.password);

    const error = validate(form, constraints);
    console.log(error);

    const { AuthActions } = this.props;
    AuthActions.setError(null);
    if (error) {
      AuthActions.setError(error);
    }
  };
  shouldComponentUpdate(nextProps, nextState) {
    console.log("LoginModalContainer:showComponentUpdate:" + nextProps.visible);
    return true;
  }
  componentDidMount() {
    console.log("LoginModalContainer:didMount");
    return true;
  }
  render() {
    const { handleChangeInput, handleRegister } = this;
    const { visible, email, password, error } = this.props;
    console.log("LoginModalContainer:" + visible);

    return (
      <LoginModal
        visible={visible}
        email={email}
        password={password}
        error={error}
        onChangeInput={handleChangeInput}
        onRegister={handleRegister}
      />
    );
  }
}

export default connect(
  state => ({
    visible: state.auth.get("visible"),
    form: state.auth.get("form"),
    error: state.auth.get("error")
  }),
  dispatch => ({
    BaseActions: bindActionCreators(baseActions, dispatch),
    AuthActions: bindActionCreators(authActions, dispatch)
  })
)(onClickOutside(LoginModalContainer));
